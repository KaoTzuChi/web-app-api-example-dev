"""
Django settings for mywebapp project.

Generated by 'django-admin startproject' using Django 3.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

APP_ENTRY = 2

try:
    import mywebapp.globals as gvs
    print('********** in mywebapp.settings.py ********** appEntry() = '+ str(gvs.appEntry()))
    APP_ENTRY = gvs.appEntry()    
except ImportError as error:
    print('********** in mywebapp.settings.py ********** ImportError : %s'%( error ))
except Exception as exception:
    print('********** in mywebapp.settings.py ********** Exception : %s'%( exception ))


#import mywebapp.globals as gvs
#print('********** in mywebapp.settings.py ********** APP_ENTRY = '+ str(APP_ENTRY))

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PROJECT_DIR = os.path.dirname(os.path.abspath(__file__))

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/
STATIC_ROOT = ( '/home/www/avlexam/mywebapp/mywebapp/static/' if APP_ENTRY>0 else os.path.join(PROJECT_DIR, 'static') )
#STATIC_ROOT = os.path.dirname(os.path.abspath(__file__))
STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
    os.path.join(BASE_DIR,"views/order"),
    os.path.join(BASE_DIR,"views/dashboard"),
    os.path.join(BASE_DIR,"views/home"),
    os.path.join(BASE_DIR,"views/layout"),
    os.path.join(BASE_DIR,"views/product"),
    os.path.join(BASE_DIR,"views/member"),
    os.path.join(BASE_DIR,"views/header"),
    os.path.join(BASE_DIR,"views/footer"),
    os.path.join(BASE_DIR,"views/data"),
    os.path.join(BASE_DIR,"views/contact"),
    os.path.join(BASE_DIR,"views/facebook"),
)


#BASE_URL >> backend api
BASE_URL = ( 'http://avlexam.tzuchikao.com/' if APP_ENTRY>0 else 'http://localhost:5678/' )
#BASE_URL = ( 'http://66.23.231.116:5588/' if APP_ENTRY==2 else BASE_URL )
#BASE_URL = ( 'http://avlexam.tzuchikao.com/' if APP_ENTRY==1 else BASE_URL )
#BASE_URL = ( 'http://66.23.231.116:9876/' if APP_ENTRY==1 else BASE_URL )
#BASE_URL = ( 'http://localhost:5678/' if APP_ENTRY==0 else BASE_URL )


FILENAME_PREFIX = ( 'prod-' if APP_ENTRY>0 else 'dev-' )

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '60e4h3v59f2x*u-^!tb+z2(-z_5@03ze7t9_8r9jx$tiqoupub'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
#DEBUG = ( False if APP_ENTRY>0 else True )

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'rest_framework.authtoken',
    'mywebapp',
    'services',
    'views',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ]
}
SESSION_SAVE_EVERY_REQUEST = True
CORS_ORIGIN_ALLOW_ALL = True

ALLOWED_HOSTS = [
    '*',            '[::1]',             'django-serice',      'avlexam.tzuchikao.com',
    '0.0.0.0',      '0.0.0.0:5678',      '0.0.0.0:9876',       '0.0.0.0:8765',      '0.0.0.0:8080',
    '127.0.0.1',    '127.0.0.1:5678',    '127.0.0.1:9876',     '127.0.0.1:8765',    '127.0.0.1:8080',
    'localhost',    'localhost:5678',    'localhost:9876',     'localhost:8765',    'localhost:8080', 
    '66.23.231.116','66.23.231.116:5588', '66.23.231.116:9876','66.23.231.116:8765','66.23.231.116:8080'     
]

CORS_ORIGIN_WHITELIST = (
      'http://localhost:5678',     'http://localhost:9876',     'http://localhost:8765',     'http://localhost:5588',     'http://localhost:8080',
      'http://0.0.0.0:5678',       'http://0.0.0.0:9876',       'http://0.0.0.0:8765',       'http://0.0.0.0:5588',       'http://0.0.0.0:8080',
      'http://127.0.0.1:5678',     'http://127.0.0.1:9876',     'http://127.0.0.1:8765',     'http://127.0.0.1:5588',     'http://127.0.0.1:8080',
      'http://66.23.231.116:5678', 'http://66.23.231.116:9876', 'http://66.23.231.116:8765', 'http://66.23.231.116:5588', 'http://66.23.231.116:8080',
      'http://avlexam.tzuchikao.com'
)
CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
)
CORS_ALLOW_HEADERS = (
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'Access-Control-Allow-Origin',
)


ROOT_URLCONF = 'mywebapp.urls'


TEMPLATE_DIR = os.path.join(BASE_DIR,"views")
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR,"views/order"),
            os.path.join(BASE_DIR,"views/dashboard"),
            os.path.join(BASE_DIR,"views/home"),
            os.path.join(BASE_DIR,"views/layout"),
            os.path.join(BASE_DIR,"views/product"),
            os.path.join(BASE_DIR,"views/member"),
            os.path.join(BASE_DIR,"views/header"),
            os.path.join(BASE_DIR,"views/footer"),
            os.path.join(BASE_DIR,"views/data"),
            os.path.join(BASE_DIR,"views/contact"),
            os.path.join(BASE_DIR,"views/facebook"),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mywebapp.wsgi.application'


# Database 
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DBNAME = ( 'db.sqlite3' if APP_ENTRY>0 else 'db_dev.sqlite3' )
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, DBNAME),
    }
}

MYDB_HOST = ( 'localhost' if APP_ENTRY>0 else 'mongo-service' )
MONGO_DATABASE = {
    'name': 'mydatabase',
    'user': 'myuser',
    'host': ( 'mongodb://myuser:myuserspwd@localhost:27017/mydatabase' if APP_ENTRY>0 else 'mongodb://myuser:myuserspwd@mongo-service:27017/mydatabase' ),
    'password': 'myuserspwd',
    'port': 27017,
    'timeput': 5000,
    'retry': 5,
}

'''
MYDB_HOST = ( 'localhost' if APP_ENTRY>0 else 'mongo-service' )
MONGO_DATABASE = {
    'name': 'mydatabase',
    'user': 'myuser',
    'host': 'mongodb://myuser:myuserspwd@'+MYDB_HOST+':27017/mydatabase',
    'password': 'myuserspwd',
    'port': 27017,
    'timeput': 5000,
    'retry': 5,
}

MONGO_DATABASE = {
    'name': 'mydatabase',
    'user': 'myuser',
    'host': 'mongodb://myuser:myuserspwd@localhost:27017/mydatabase',
    'password': 'myuserspwd',
    'port': 27017,
    'timeput': 5000,
    'retry': 5,
}

MONGO_DATABASE = {
    'name': 'mydatabase',
    'user': 'myuser',
    'password': 'myuserspwd',
    'host': 'mongodb://myuser:myuserspwd@mongo-service:27017/mydatabase',
    'port': 27017,
    'timeput': 5000,
    'retry': 5,
}
'''


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


